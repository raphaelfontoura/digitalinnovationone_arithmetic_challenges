/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.digitalinnovationone.desafiosjava;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.*;

import static org.junit.Assert.*;

public class DivisorChallengeTest {
    private final PrintStream systemOut = System.out;
    private final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();

    @Before
    public void setUp() {
        System.setOut(new PrintStream(outputStream));
    }

    @After
    public void tearDown() {
        System.setOut(systemOut);
    }

    @Test
    public void givenInvalidNumberInputMustOutputNegativeOne() throws IOException {

        var input = "151878189 131963689 438166849 780261216";
        var inputStream = new ByteArrayInputStream(input.getBytes());
        System.setIn(inputStream);

        var expected = "-1";

        DivisorChallenge.main(null);
        assertEquals(expected, outputStream.toString().trim());
    }

    @Test
    public void givenAnyNegativeNumberInputMustOutputOneNegative() throws IOException {
        var input = "7 12 -5 4";
        var inputStream = new ByteArrayInputStream(input.getBytes());
        System.setIn(inputStream);

        var expected = "-1";

        DivisorChallenge.main(null);
        assertEquals(expected, outputStream.toString().trim());
    }

    @Test
    public void givenAnyInputMustOutputOnePrintLine() throws IOException {
        var input = ("2 12 8 2\n" +
                "3 4 60 105");
        var inputStream = new ByteArrayInputStream(input.getBytes());
        System.setIn(inputStream);

        var expected = "4";

        DivisorChallenge.main(null);
        assertEquals(expected, outputStream.toString().trim());
    }

    @Test
    public void givenValidNumbersInputMustOutputValidNumber_Test1() throws IOException {
        var input = "2 40 90 25";
        var inputStream = new ByteArrayInputStream(input.getBytes());
        System.setIn(inputStream);

        var expected = "2";

        DivisorChallenge.main(null);
        assertEquals(expected, outputStream.toString().trim());
    }

    @Test
    public void givenValidNumbersInputMustOutputValidNumber_Test2() throws IOException {
        var input = "2 12 8 2";
        var inputStream = new ByteArrayInputStream(input.getBytes());
        System.setIn(inputStream);

        var expected = "4";

        DivisorChallenge.main(null);
        assertEquals(expected, outputStream.toString().trim());
    }

    @Test
    public void givenValidNumbersInputMustOutputValidNumber_Test3() throws IOException {
        var input = "3 4 60 105";
        var inputStream = new ByteArrayInputStream(input.getBytes());
        System.setIn(inputStream);

        var expected = "6";

        DivisorChallenge.main(null);
        assertEquals(expected, outputStream.toString().trim());
    }

}
